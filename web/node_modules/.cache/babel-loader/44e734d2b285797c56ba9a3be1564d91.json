{"remainingRequest":"/Users/klook/work/leaf/web/node_modules/babel-loader/lib/index.js!/Users/klook/work/leaf/web/node_modules/eslint-loader/index.js??ref--13-0!/Users/klook/work/leaf/web/src/router/index.js","dependencies":[{"path":"/Users/klook/work/leaf/web/src/router/index.js","mtime":1574778713011},{"path":"/Users/klook/work/leaf/web/node_modules/cache-loader/dist/cjs.js","mtime":1574055442948},{"path":"/Users/klook/work/leaf/web/node_modules/babel-loader/lib/index.js","mtime":1574055434942},{"path":"/Users/klook/work/leaf/web/node_modules/eslint-loader/index.js","mtime":1574055442034}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZVJvdXRlciBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IEhvbWUgZnJvbSAiLi4vdmlld3MvSG9tZS52dWUiOwpWdWUudXNlKFZ1ZVJvdXRlcik7CnZhciByb3V0ZXMgPSBbewogIHBhdGg6ICcvJywKICBuYW1lOiAnaG9tZScsCiAgY29tcG9uZW50OiBIb21lCn0sIHsKICBwYXRoOiAnL3Byb2JsZW1zJywKICBuYW1lOiAncHJvYmxlbXMnLAogIC8vIHJvdXRlIGxldmVsIGNvZGUtc3BsaXR0aW5nCiAgLy8gdGhpcyBnZW5lcmF0ZXMgYSBzZXBhcmF0ZSBjaHVuayAoYWJvdXQuW2hhc2hdLmpzKSBmb3IgdGhpcyByb3V0ZQogIC8vIHdoaWNoIGlzIGxhenktbG9hZGVkIHdoZW4gdGhlIHJvdXRlIGlzIHZpc2l0ZWQuCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gaW1wb3J0KAogICAgLyogd2VicGFja0NodW5rTmFtZTogImFib3V0IiAqLwogICAgIi4uL3ZpZXdzL1Byb2JsZW1zLnZ1ZSIpOwogIH0KfSwgewogIHBhdGg6ICcvcHJvYmxlbS86aWQnLAogIG5hbWU6ICdwcm9ibGVtJywKICAvLyByb3V0ZSBsZXZlbCBjb2RlLXNwbGl0dGluZwogIC8vIHRoaXMgZ2VuZXJhdGVzIGEgc2VwYXJhdGUgY2h1bmsgKGFib3V0LltoYXNoXS5qcykgZm9yIHRoaXMgcm91dGUKICAvLyB3aGljaCBpcyBsYXp5LWxvYWRlZCB3aGVuIHRoZSByb3V0ZSBpcyB2aXNpdGVkLgogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgKICAgIC8qIHdlYnBhY2tDaHVua05hbWU6ICJhY2UiICovCiAgICAiLi4vdmlld3MvUHJvYmxlbS52dWUiKTsKICB9Cn0sIHsKICBwYXRoOiAnL3NvbHV0aW9uL2FkZC86aWQnLAogIG5hbWU6ICdzb2x1dGlvbkFkZCcsCiAgLy8gcm91dGUgbGV2ZWwgY29kZS1zcGxpdHRpbmcKICAvLyB0aGlzIGdlbmVyYXRlcyBhIHNlcGFyYXRlIGNodW5rIChhYm91dC5baGFzaF0uanMpIGZvciB0aGlzIHJvdXRlCiAgLy8gd2hpY2ggaXMgbGF6eS1sb2FkZWQgd2hlbiB0aGUgcm91dGUgaXMgdmlzaXRlZC4KICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBpbXBvcnQoCiAgICAvKiB3ZWJwYWNrQ2h1bmtOYW1lOiAiYWNlIiAqLwogICAgIi4uL3ZpZXdzL1NvbHV0aW9uQWRkLnZ1ZSIpOwogIH0KfSwgewogIHBhdGg6ICcvc29sdXRpb24vZGV0YWlsLzppZCcsCiAgbmFtZTogJ3NvbHV0aW9uRGV0YWlsJywKICAvLyByb3V0ZSBsZXZlbCBjb2RlLXNwbGl0dGluZwogIC8vIHRoaXMgZ2VuZXJhdGVzIGEgc2VwYXJhdGUgY2h1bmsgKGFib3V0LltoYXNoXS5qcykgZm9yIHRoaXMgcm91dGUKICAvLyB3aGljaCBpcyBsYXp5LWxvYWRlZCB3aGVuIHRoZSByb3V0ZSBpcyB2aXNpdGVkLgogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgKICAgIC8qIHdlYnBhY2tDaHVua05hbWU6ICJhY2UiICovCiAgICAiLi4vdmlld3MvU29sdXRpb25EZXRhaWwudnVlIik7CiAgfQp9LCB7CiAgcGF0aDogJy9zb2x1dGlvbi9lZGl0LzppZCcsCiAgbmFtZTogJ3NvbHV0aW9uRWRpdCcsCiAgLy8gcm91dGUgbGV2ZWwgY29kZS1zcGxpdHRpbmcKICAvLyB0aGlzIGdlbmVyYXRlcyBhIHNlcGFyYXRlIGNodW5rIChhYm91dC5baGFzaF0uanMpIGZvciB0aGlzIHJvdXRlCiAgLy8gd2hpY2ggaXMgbGF6eS1sb2FkZWQgd2hlbiB0aGUgcm91dGUgaXMgdmlzaXRlZC4KICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgIHJldHVybiBpbXBvcnQoCiAgICAvKiB3ZWJwYWNrQ2h1bmtOYW1lOiAiYWNlIiAqLwogICAgIi4uL3ZpZXdzL1NvbHV0aW9uRWRpdC52dWUiKTsKICB9Cn0sIHsKICBwYXRoOiAnL2Fib3V0JywKICBuYW1lOiAnYWJvdXQnLAogIC8vIHJvdXRlIGxldmVsIGNvZGUtc3BsaXR0aW5nCiAgLy8gdGhpcyBnZW5lcmF0ZXMgYSBzZXBhcmF0ZSBjaHVuayAoYWJvdXQuW2hhc2hdLmpzKSBmb3IgdGhpcyByb3V0ZQogIC8vIHdoaWNoIGlzIGxhenktbG9hZGVkIHdoZW4gdGhlIHJvdXRlIGlzIHZpc2l0ZWQuCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gaW1wb3J0KAogICAgLyogd2VicGFja0NodW5rTmFtZTogImFib3V0IiAqLwogICAgIi4uL3ZpZXdzL0Fib3V0LnZ1ZSIpOwogIH0KfSwgewogIHBhdGg6ICcvYWNlJywKICBuYW1lOiAnYWNlJywKICAvLyByb3V0ZSBsZXZlbCBjb2RlLXNwbGl0dGluZwogIC8vIHRoaXMgZ2VuZXJhdGVzIGEgc2VwYXJhdGUgY2h1bmsgKGFib3V0LltoYXNoXS5qcykgZm9yIHRoaXMgcm91dGUKICAvLyB3aGljaCBpcyBsYXp5LWxvYWRlZCB3aGVuIHRoZSByb3V0ZSBpcyB2aXNpdGVkLgogIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgcmV0dXJuIGltcG9ydCgKICAgIC8qIHdlYnBhY2tDaHVua05hbWU6ICJhY2UiICovCiAgICAiLi4vdmlld3MvQWNlLnZ1ZSIpOwogIH0KfV07CnZhciByb3V0ZXIgPSBuZXcgVnVlUm91dGVyKHsKICBtb2RlOiAnaGlzdG9yeScsCiAgcm91dGVzOiByb3V0ZXMKfSk7CmV4cG9ydCBkZWZhdWx0IHJvdXRlcjs="},{"version":3,"sources":["/Users/klook/work/leaf/web/src/router/index.js"],"names":["Vue","VueRouter","Home","use","routes","path","name","component","router","mode"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP;AAEAF,GAAG,CAACG,GAAJ,CAAQF,SAAR;AAEA,IAAMG,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAEL;AAHb,CADa,EAMb;AACEG,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,4BAAN;AAAA;AANb,CANa,EAcb;AACEF,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,2BAAN;AAAA;AANb,CAda,EAsBb;AACEF,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,+BAAN;AAAA;AANb,CAtBa,EA8Bb;AACEF,EAAAA,IAAI,EAAE,sBADR;AAEEC,EAAAA,IAAI,EAAE,gBAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,kCAAN;AAAA;AANb,CA9Ba,EAsCb;AACEF,EAAAA,IAAI,EAAE,oBADR;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,gCAAN;AAAA;AANb,CAtCa,EA8Cb;AACEF,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,yBAAN;AAAA;AANb,CA9Ca,EAsDb;AACEF,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGE;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAAP,uBAAN;AAAA;AANb,CAtDa,CAAf;AAgEA,IAAMC,MAAM,GAAG,IAAIP,SAAJ,CAAc;AAC3BQ,EAAAA,IAAI,EAAE,SADqB;AAE3BL,EAAAA,MAAM,EAAEA;AAFmB,CAAd,CAAf;AAKA,eAAeI,MAAf","sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: Home\n  },\n  {\n    path: '/problems',\n    name: 'problems',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/Problems.vue')\n  },\n  {\n    path: '/problem/:id',\n    name: 'problem',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ace\" */ '../views/Problem.vue'),\n  },\n  {\n    path: '/solution/add/:id',\n    name: 'solutionAdd',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ace\" */ '../views/SolutionAdd.vue'),\n  },\n  {\n    path: '/solution/detail/:id',\n    name: 'solutionDetail',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ace\" */ '../views/SolutionDetail.vue'),\n  },\n  {\n    path: '/solution/edit/:id',\n    name: 'solutionEdit',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ace\" */ '../views/SolutionEdit.vue'),\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  },\n  {\n    path: '/ace',\n    name: 'ace',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"ace\" */ '../views/Ace.vue'),\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes: routes\n})\n\nexport default router\n"]}]}